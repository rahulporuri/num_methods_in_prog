%!PS-Adobe-2.0
%%Title: comp_errors.ps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Fri May  8 14:17:10 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (comp_errors.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (student)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May  8 14:17:10 2015)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
602 448 M
63 0 V
6282 0 R
-63 0 V
stroke
518 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (-14)]
] -46.7 MRshow
1.000 UL
LTb
602 1044 M
63 0 V
6282 0 R
-63 0 V
stroke
518 1044 M
[ [(Helvetica) 140.0 0.0 true true 0 (-12)]
] -46.7 MRshow
1.000 UL
LTb
602 1640 M
63 0 V
6282 0 R
-63 0 V
stroke
518 1640 M
[ [(Helvetica) 140.0 0.0 true true 0 (-10)]
] -46.7 MRshow
1.000 UL
LTb
602 2236 M
63 0 V
6282 0 R
-63 0 V
stroke
518 2236 M
[ [(Helvetica) 140.0 0.0 true true 0 (-8)]
] -46.7 MRshow
1.000 UL
LTb
602 2831 M
63 0 V
6282 0 R
-63 0 V
stroke
518 2831 M
[ [(Helvetica) 140.0 0.0 true true 0 (-6)]
] -46.7 MRshow
1.000 UL
LTb
602 3427 M
63 0 V
6282 0 R
-63 0 V
stroke
518 3427 M
[ [(Helvetica) 140.0 0.0 true true 0 (-4)]
] -46.7 MRshow
1.000 UL
LTb
602 4023 M
63 0 V
6282 0 R
-63 0 V
stroke
518 4023 M
[ [(Helvetica) 140.0 0.0 true true 0 (-2)]
] -46.7 MRshow
1.000 UL
LTb
602 4619 M
63 0 V
6282 0 R
-63 0 V
stroke
518 4619 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
602 448 M
0 63 V
0 4108 R
0 -63 V
stroke
602 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1660 448 M
0 63 V
0 4108 R
0 -63 V
stroke
1660 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MCshow
1.000 UL
LTb
2717 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2717 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
3775 448 M
0 63 V
0 4108 R
0 -63 V
stroke
3775 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5)]
] -46.7 MCshow
1.000 UL
LTb
4832 448 M
0 63 V
0 4108 R
0 -63 V
stroke
4832 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
5890 448 M
0 63 V
0 4108 R
0 -63 V
stroke
5890 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.5)]
] -46.7 MCshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6947 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
602 4619 N
602 448 L
6345 0 V
0 4171 V
-6345 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (log10\(err\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3774 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (log10\(N\))]
] -46.7 MCshow
LTb
3774 4829 M
[ [(Helvetica) 140.0 0.0 true true 0 (comparison of errors pre- and post-trick in estimation of integral)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
1526 721 M
[ [(Helvetica) 140.0 0.0 true true 0 (pre-trick)]
] -46.7 MRshow
LT0
1611 4409 Pls
2080 4223 Pls
2389 3821 Pls
2620 3413 Pls
2805 3850 Pls
2958 3941 Pls
3089 3683 Pls
3204 3053 Pls
3307 3681 Pls
3398 3809 Pls
3482 3582 Pls
3559 2843 Pls
3629 3579 Pls
3695 3722 Pls
3756 3508 Pls
3814 2694 Pls
3868 3506 Pls
3919 3657 Pls
3967 3450 Pls
4013 2579 Pls
4057 3448 Pls
4099 3605 Pls
4138 3403 Pls
4177 2484 Pls
4214 3402 Pls
4249 3562 Pls
4283 3363 Pls
4316 2405 Pls
4347 3362 Pls
4378 3525 Pls
4408 3329 Pls
4436 2335 Pls
4464 3328 Pls
4491 3492 Pls
4517 3298 Pls
4543 2274 Pls
4568 3297 Pls
4592 3463 Pls
4615 3271 Pls
4638 2220 Pls
4661 3270 Pls
4683 3438 Pls
4704 3246 Pls
4725 2171 Pls
4745 3245 Pls
4765 3414 Pls
4785 3224 Pls
4804 2126 Pls
4823 3223 Pls
4841 3392 Pls
4859 3203 Pls
4877 2084 Pls
4894 3202 Pls
4911 3372 Pls
4928 3184 Pls
4944 2046 Pls
4960 3183 Pls
4976 3354 Pls
4992 3166 Pls
5007 2010 Pls
5022 3165 Pls
5037 3337 Pls
5052 3149 Pls
5066 1977 Pls
5080 3149 Pls
5094 3321 Pls
5108 3134 Pls
5121 1945 Pls
5134 3133 Pls
5148 3305 Pls
5161 3119 Pls
5173 1916 Pls
5186 3118 Pls
5198 3291 Pls
5211 3105 Pls
5223 1888 Pls
5235 3104 Pls
5246 3277 Pls
5258 3092 Pls
5269 1861 Pls
5281 3091 Pls
5292 3264 Pls
5303 3079 Pls
5314 1836 Pls
5325 3078 Pls
5335 3252 Pls
5346 3067 Pls
5356 1812 Pls
5367 3066 Pls
5377 3240 Pls
5387 3055 Pls
5397 1789 Pls
5407 3055 Pls
5417 3229 Pls
5426 3044 Pls
5436 1767 Pls
5445 3044 Pls
5455 3218 Pls
5464 3034 Pls
5473 1746 Pls
5482 3033 Pls
5491 3208 Pls
5500 3024 Pls
5509 1725 Pls
5518 3023 Pls
5527 3198 Pls
5535 3014 Pls
5544 1706 Pls
5552 3014 Pls
5560 3188 Pls
5569 3004 Pls
5577 1687 Pls
5585 3004 Pls
5593 3179 Pls
5601 2995 Pls
5609 1669 Pls
5617 2995 Pls
5625 3170 Pls
5632 2987 Pls
5640 1651 Pls
5648 2986 Pls
5655 3162 Pls
5663 2978 Pls
5670 1634 Pls
5677 2978 Pls
5685 3153 Pls
5692 2970 Pls
5699 1618 Pls
5706 2970 Pls
5713 3145 Pls
5720 2962 Pls
5727 1602 Pls
5734 2962 Pls
5741 3137 Pls
5748 2954 Pls
5754 1587 Pls
5761 2954 Pls
5768 3130 Pls
5774 2947 Pls
5781 1572 Pls
5788 2946 Pls
5794 3122 Pls
5800 2939 Pls
5807 1557 Pls
5813 2939 Pls
5819 3115 Pls
5826 2932 Pls
5832 1543 Pls
5838 2932 Pls
5844 3108 Pls
5850 2925 Pls
5856 1529 Pls
5862 2925 Pls
5868 3101 Pls
5874 2919 Pls
5880 1516 Pls
5886 2918 Pls
5892 3095 Pls
5898 2912 Pls
5903 1502 Pls
5909 2912 Pls
5915 3088 Pls
5920 2906 Pls
5926 1490 Pls
5931 2905 Pls
5937 3082 Pls
5942 2900 Pls
5948 1477 Pls
5953 2899 Pls
5959 3076 Pls
5964 2893 Pls
5969 1465 Pls
5975 2893 Pls
5980 3070 Pls
5985 2887 Pls
5991 1453 Pls
5996 2887 Pls
6001 3064 Pls
6006 2882 Pls
6011 1441 Pls
6016 2881 Pls
6021 3058 Pls
6026 2876 Pls
6031 1430 Pls
6036 2876 Pls
6041 3052 Pls
6046 2870 Pls
6051 1419 Pls
6056 2870 Pls
6061 3047 Pls
6065 2865 Pls
6070 1408 Pls
6075 2865 Pls
6080 3042 Pls
6084 2860 Pls
6089 1397 Pls
6094 2859 Pls
6098 3036 Pls
6103 2854 Pls
6108 1387 Pls
6112 2854 Pls
6117 3031 Pls
6121 2849 Pls
6126 1377 Pls
6130 2849 Pls
6135 3026 Pls
6139 2844 Pls
6144 1367 Pls
6148 2844 Pls
6152 3021 Pls
6157 2839 Pls
6161 1357 Pls
6165 2839 Pls
6170 3016 Pls
6174 2834 Pls
6178 1347 Pls
6182 2834 Pls
6187 3011 Pls
6191 2830 Pls
6195 1338 Pls
6199 2830 Pls
6203 3007 Pls
6207 2825 Pls
6212 1328 Pls
6216 2825 Pls
6220 3002 Pls
6224 2820 Pls
6228 1319 Pls
6232 2820 Pls
6236 2997 Pls
6240 2816 Pls
6244 1310 Pls
6248 2816 Pls
6252 2993 Pls
6255 2812 Pls
6259 1301 Pls
6263 2811 Pls
6267 2989 Pls
6271 2807 Pls
6275 1293 Pls
6279 2807 Pls
6282 2984 Pls
6286 2803 Pls
6290 1284 Pls
6294 2803 Pls
6297 2980 Pls
6301 2799 Pls
6305 1276 Pls
6308 2799 Pls
6312 2976 Pls
6316 2795 Pls
6319 1267 Pls
6323 2794 Pls
6327 2972 Pls
6330 2790 Pls
6334 1259 Pls
6337 2790 Pls
6341 2968 Pls
6345 2786 Pls
6348 1251 Pls
6352 2786 Pls
6355 2964 Pls
6359 2783 Pls
6362 1243 Pls
6366 2782 Pls
6369 2960 Pls
6372 2779 Pls
6376 1235 Pls
6379 2778 Pls
6383 2956 Pls
6386 2775 Pls
6389 1228 Pls
6393 2775 Pls
6396 2952 Pls
6400 2771 Pls
6403 1220 Pls
6406 2771 Pls
6409 2948 Pls
6413 2767 Pls
6416 1213 Pls
6419 2767 Pls
6423 2945 Pls
6426 2764 Pls
6429 1205 Pls
6432 2763 Pls
6435 2941 Pls
6439 2760 Pls
6442 1198 Pls
6445 2760 Pls
6448 2937 Pls
6451 2756 Pls
6455 1191 Pls
6458 2756 Pls
6461 2934 Pls
6464 2753 Pls
6467 1184 Pls
6470 2753 Pls
6473 2930 Pls
6476 2749 Pls
6479 1177 Pls
6482 2749 Pls
6485 2927 Pls
6488 2746 Pls
6491 1170 Pls
6494 2746 Pls
6497 2924 Pls
6500 2743 Pls
6503 1163 Pls
6506 2742 Pls
6509 2920 Pls
6512 2739 Pls
6515 1157 Pls
6518 2739 Pls
6521 2917 Pls
6524 2736 Pls
6527 1150 Pls
6530 2736 Pls
6533 2914 Pls
6536 2733 Pls
6539 1144 Pls
6541 2733 Pls
6544 2910 Pls
6547 2730 Pls
6550 1137 Pls
6553 2729 Pls
6556 2907 Pls
6558 2726 Pls
6561 1131 Pls
6564 2726 Pls
6567 2904 Pls
6570 2723 Pls
6572 1124 Pls
6575 2723 Pls
6578 2901 Pls
6581 2720 Pls
6583 1118 Pls
6586 2720 Pls
6589 2898 Pls
6591 2717 Pls
6594 1112 Pls
6597 2717 Pls
6599 2895 Pls
6602 2714 Pls
6605 1106 Pls
6607 2714 Pls
6610 2892 Pls
6613 2711 Pls
6615 1100 Pls
6618 2711 Pls
6621 2889 Pls
6623 2708 Pls
6626 1094 Pls
6629 2708 Pls
6631 2886 Pls
6634 2705 Pls
6636 1089 Pls
6639 2705 Pls
6641 2883 Pls
6644 2702 Pls
6647 1083 Pls
6649 2702 Pls
6652 2880 Pls
6654 2699 Pls
6657 1077 Pls
6659 2699 Pls
6662 2877 Pls
6664 2697 Pls
6667 1071 Pls
6669 2696 Pls
6672 2874 Pls
6674 2694 Pls
6677 1066 Pls
6679 2694 Pls
6682 2872 Pls
6684 2691 Pls
6686 1060 Pls
6689 2691 Pls
6691 2869 Pls
6694 2688 Pls
6696 1055 Pls
6699 2688 Pls
6701 2866 Pls
6703 2686 Pls
6706 1049 Pls
6708 2685 Pls
6710 2864 Pls
6713 2683 Pls
6715 1044 Pls
6718 2683 Pls
6720 2861 Pls
6722 2680 Pls
6725 1039 Pls
6727 2680 Pls
6729 2858 Pls
6732 2678 Pls
6734 1033 Pls
6736 2677 Pls
6739 2856 Pls
6741 2675 Pls
6743 1028 Pls
6745 2675 Pls
6748 2853 Pls
6750 2672 Pls
6752 1023 Pls
6755 2672 Pls
6757 2850 Pls
6759 2670 Pls
6761 1018 Pls
6764 2670 Pls
6766 2848 Pls
6768 2667 Pls
6770 1013 Pls
6773 2667 Pls
6775 2845 Pls
6777 2665 Pls
6779 1008 Pls
6781 2665 Pls
6784 2843 Pls
6786 2662 Pls
6788 1003 Pls
6790 2662 Pls
6792 2840 Pls
6794 2660 Pls
6797 998 Pls
6799 2660 Pls
6801 2838 Pls
6803 2657 Pls
6805 993 Pls
6807 2657 Pls
6810 2836 Pls
6812 2655 Pls
6814 988 Pls
6816 2655 Pls
6818 2833 Pls
6820 2653 Pls
6822 983 Pls
6824 2653 Pls
6826 2831 Pls
6829 2650 Pls
6831 979 Pls
6833 2650 Pls
6835 2828 Pls
6837 2648 Pls
6839 974 Pls
6841 2648 Pls
6843 2826 Pls
6845 2646 Pls
6847 970 Pls
6849 2646 Pls
6851 2824 Pls
6853 2643 Pls
6855 965 Pls
6857 2643 Pls
6859 2822 Pls
6861 2641 Pls
6863 960 Pls
6865 2641 Pls
6867 2819 Pls
6869 2639 Pls
6871 956 Pls
6873 2639 Pls
6875 2817 Pls
6877 2637 Pls
6879 952 Pls
6881 2636 Pls
6883 2815 Pls
6885 2634 Pls
6887 947 Pls
6889 2634 Pls
6891 2813 Pls
6893 2632 Pls
6895 943 Pls
6897 2632 Pls
6899 2810 Pls
6901 2630 Pls
6903 938 Pls
6905 2630 Pls
6907 2808 Pls
6909 2628 Pls
6910 934 Pls
6912 2628 Pls
6914 2806 Pls
6916 2626 Pls
6918 930 Pls
6920 2626 Pls
6922 2804 Pls
6924 2623 Pls
6926 925 Pls
6928 2623 Pls
6929 2802 Pls
6931 2621 Pls
6933 921 Pls
6935 2621 Pls
6937 2800 Pls
6939 2619 Pls
6941 916 Pls
6942 2619 Pls
6944 2798 Pls
6946 2617 Pls
1809 721 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
LCb setrgbcolor
1526 581 M
[ [(Helvetica) 140.0 0.0 true true 0 (post-trick)]
] -46.7 MRshow
LT1
1611 3788 Crs
2080 3425 Crs
2389 3214 Crs
2620 3065 Crs
2805 2949 Crs
2958 2855 Crs
3089 2775 Crs
3204 2706 Crs
3307 2645 Crs
3398 2590 Crs
3482 2541 Crs
3559 2496 Crs
3629 2454 Crs
3695 2416 Crs
3756 2380 Crs
3814 2347 Crs
3868 2315 Crs
3919 2286 Crs
3967 2258 Crs
4013 2231 Crs
4057 2206 Crs
4099 2182 Crs
4138 2159 Crs
4177 2137 Crs
4214 2116 Crs
4249 2096 Crs
4283 2076 Crs
4316 2057 Crs
4347 2039 Crs
4378 2021 Crs
4408 2005 Crs
4436 1988 Crs
4464 1972 Crs
4491 1957 Crs
4517 1942 Crs
4543 1927 Crs
4568 1913 Crs
4592 1899 Crs
4615 1886 Crs
4638 1873 Crs
4661 1860 Crs
4683 1847 Crs
4704 1835 Crs
4725 1823 Crs
4745 1812 Crs
4765 1800 Crs
4785 1789 Crs
4804 1778 Crs
4823 1768 Crs
4841 1757 Crs
4859 1747 Crs
4877 1737 Crs
4894 1727 Crs
4911 1717 Crs
4928 1708 Crs
4944 1698 Crs
4960 1689 Crs
4976 1680 Crs
4992 1671 Crs
5007 1663 Crs
5022 1654 Crs
5037 1646 Crs
5052 1637 Crs
5066 1629 Crs
5080 1621 Crs
5094 1613 Crs
5108 1606 Crs
5121 1598 Crs
5134 1590 Crs
5148 1583 Crs
5161 1576 Crs
5173 1568 Crs
5186 1561 Crs
5198 1554 Crs
5211 1547 Crs
5223 1540 Crs
5235 1534 Crs
5246 1527 Crs
5258 1520 Crs
5269 1514 Crs
5281 1507 Crs
5292 1501 Crs
5303 1495 Crs
5314 1489 Crs
5325 1482 Crs
5335 1476 Crs
5346 1470 Crs
5356 1465 Crs
5367 1459 Crs
5377 1453 Crs
5387 1447 Crs
5397 1442 Crs
5407 1436 Crs
5417 1430 Crs
5426 1425 Crs
5436 1419 Crs
5445 1414 Crs
5455 1409 Crs
5464 1404 Crs
5473 1398 Crs
5482 1393 Crs
5491 1388 Crs
5500 1383 Crs
5509 1378 Crs
5518 1373 Crs
5527 1368 Crs
5535 1363 Crs
5544 1359 Crs
5552 1354 Crs
5560 1349 Crs
5569 1344 Crs
5577 1340 Crs
5585 1335 Crs
5593 1331 Crs
5601 1326 Crs
5609 1322 Crs
5617 1317 Crs
5625 1313 Crs
5632 1308 Crs
5640 1304 Crs
5648 1300 Crs
5655 1295 Crs
5663 1291 Crs
5670 1287 Crs
5677 1283 Crs
5685 1279 Crs
5692 1275 Crs
5699 1271 Crs
5706 1267 Crs
5713 1263 Crs
5720 1259 Crs
5727 1255 Crs
5734 1251 Crs
5741 1247 Crs
5748 1243 Crs
5754 1239 Crs
5761 1235 Crs
5768 1232 Crs
5774 1228 Crs
5781 1224 Crs
5788 1221 Crs
5794 1217 Crs
5800 1213 Crs
5807 1210 Crs
5813 1206 Crs
5819 1203 Crs
5826 1199 Crs
5832 1195 Crs
5838 1192 Crs
5844 1189 Crs
5850 1185 Crs
5856 1182 Crs
5862 1178 Crs
5868 1175 Crs
5874 1172 Crs
5880 1168 Crs
5886 1165 Crs
5892 1162 Crs
5898 1158 Crs
5903 1155 Crs
5909 1152 Crs
5915 1149 Crs
5920 1145 Crs
5926 1142 Crs
5931 1139 Crs
5937 1136 Crs
5942 1133 Crs
5948 1130 Crs
5953 1127 Crs
5959 1124 Crs
5964 1121 Crs
5969 1118 Crs
5975 1115 Crs
5980 1112 Crs
5985 1109 Crs
5991 1106 Crs
5996 1103 Crs
6001 1100 Crs
6006 1097 Crs
6011 1094 Crs
6016 1091 Crs
6021 1088 Crs
6026 1086 Crs
6031 1083 Crs
6036 1080 Crs
6041 1077 Crs
6046 1074 Crs
6051 1072 Crs
6056 1069 Crs
6061 1066 Crs
6065 1063 Crs
6070 1061 Crs
6075 1058 Crs
6080 1055 Crs
6084 1053 Crs
6089 1050 Crs
6094 1047 Crs
6098 1045 Crs
6103 1042 Crs
6108 1040 Crs
6112 1037 Crs
6117 1034 Crs
6121 1032 Crs
6126 1029 Crs
6130 1027 Crs
6135 1024 Crs
6139 1022 Crs
6144 1019 Crs
6148 1017 Crs
6152 1014 Crs
6157 1012 Crs
6161 1009 Crs
6165 1007 Crs
6170 1005 Crs
6174 1002 Crs
6178 1000 Crs
6182 997 Crs
6187 995 Crs
6191 993 Crs
6195 990 Crs
6199 988 Crs
6203 986 Crs
6207 983 Crs
6212 981 Crs
6216 979 Crs
6220 976 Crs
6224 974 Crs
6228 972 Crs
6232 970 Crs
6236 967 Crs
6240 965 Crs
6244 963 Crs
6248 961 Crs
6252 958 Crs
6255 956 Crs
6259 954 Crs
6263 952 Crs
6267 950 Crs
6271 947 Crs
6275 945 Crs
6279 943 Crs
6282 941 Crs
6286 939 Crs
6290 937 Crs
6294 935 Crs
6297 933 Crs
6301 930 Crs
6305 928 Crs
6308 926 Crs
6312 924 Crs
6316 922 Crs
6319 920 Crs
6323 918 Crs
6327 916 Crs
6330 914 Crs
6334 912 Crs
6337 910 Crs
6341 908 Crs
6345 906 Crs
6348 904 Crs
6352 902 Crs
6355 900 Crs
6359 898 Crs
6362 896 Crs
6366 894 Crs
6369 892 Crs
6372 890 Crs
6376 888 Crs
6379 886 Crs
6383 884 Crs
6386 883 Crs
6389 880 Crs
6393 878 Crs
6396 877 Crs
6400 875 Crs
6403 873 Crs
6406 871 Crs
6409 869 Crs
6413 867 Crs
6416 865 Crs
6419 864 Crs
6423 862 Crs
6426 860 Crs
6429 858 Crs
6432 856 Crs
6435 855 Crs
6439 852 Crs
6442 851 Crs
6445 849 Crs
6448 847 Crs
6451 846 Crs
6455 844 Crs
6458 842 Crs
6461 840 Crs
6464 839 Crs
6467 837 Crs
6470 835 Crs
6473 833 Crs
6476 832 Crs
6479 830 Crs
6482 828 Crs
6485 826 Crs
6488 825 Crs
6491 823 Crs
6494 821 Crs
6497 820 Crs
6500 818 Crs
6503 816 Crs
6506 815 Crs
6509 813 Crs
6512 812 Crs
6515 810 Crs
6518 808 Crs
6521 806 Crs
6524 805 Crs
6527 803 Crs
6530 801 Crs
6533 800 Crs
6536 798 Crs
6539 796 Crs
6541 795 Crs
6544 793 Crs
6547 792 Crs
6550 790 Crs
6553 788 Crs
6556 787 Crs
6558 785 Crs
6561 784 Crs
6564 782 Crs
6567 780 Crs
6570 779 Crs
6572 777 Crs
6575 775 Crs
6578 774 Crs
6581 773 Crs
6583 771 Crs
6586 769 Crs
6589 768 Crs
6591 766 Crs
6594 765 Crs
6597 763 Crs
6599 762 Crs
6602 760 Crs
6605 759 Crs
6607 758 Crs
6610 756 Crs
6613 755 Crs
6615 753 Crs
6618 751 Crs
6621 750 Crs
6623 749 Crs
6626 747 Crs
6629 746 Crs
6631 745 Crs
6634 742 Crs
6636 741 Crs
6639 740 Crs
6641 738 Crs
6644 737 Crs
6647 736 Crs
6649 734 Crs
6652 733 Crs
6654 731 Crs
6657 730 Crs
6659 728 Crs
6662 727 Crs
6664 724 Crs
6667 725 Crs
6669 723 Crs
6672 721 Crs
6674 718 Crs
6677 718 Crs
6679 717 Crs
6682 715 Crs
6684 715 Crs
6686 713 Crs
6689 711 Crs
6691 711 Crs
6694 709 Crs
6696 707 Crs
6699 707 Crs
6701 704 Crs
6703 703 Crs
6706 702 Crs
6708 700 Crs
6710 700 Crs
6713 698 Crs
6715 696 Crs
6718 695 Crs
6720 694 Crs
6722 693 Crs
6725 691 Crs
6727 691 Crs
6729 689 Crs
6732 687 Crs
6734 686 Crs
6736 685 Crs
6739 684 Crs
6741 683 Crs
6743 681 Crs
6745 680 Crs
6748 679 Crs
6750 677 Crs
6752 677 Crs
6755 674 Crs
6757 674 Crs
6759 672 Crs
6761 671 Crs
6764 671 Crs
6766 669 Crs
6768 666 Crs
6770 668 Crs
6773 664 Crs
6775 664 Crs
6777 661 Crs
6779 660 Crs
6781 659 Crs
6784 659 Crs
6786 656 Crs
6788 654 Crs
6790 654 Crs
6792 652 Crs
6794 652 Crs
6797 652 Crs
6799 650 Crs
6801 648 Crs
6803 647 Crs
6805 647 Crs
6807 646 Crs
6810 645 Crs
6812 643 Crs
6814 641 Crs
6816 640 Crs
6818 640 Crs
6820 638 Crs
6822 636 Crs
6824 636 Crs
6826 634 Crs
6829 633 Crs
6831 633 Crs
6833 630 Crs
6835 631 Crs
6837 628 Crs
6839 627 Crs
6841 628 Crs
6843 626 Crs
6845 621 Crs
6847 623 Crs
6849 622 Crs
6851 620 Crs
6853 620 Crs
6855 618 Crs
6857 616 Crs
6859 614 Crs
6861 614 Crs
6863 614 Crs
6865 611 Crs
6867 612 Crs
6869 609 Crs
6871 608 Crs
6873 609 Crs
6875 605 Crs
6877 607 Crs
6879 604 Crs
6881 603 Crs
6883 603 Crs
6885 602 Crs
6887 599 Crs
6889 598 Crs
6891 599 Crs
6893 598 Crs
6895 594 Crs
6897 597 Crs
6899 592 Crs
6901 592 Crs
6903 591 Crs
6905 589 Crs
6907 589 Crs
6909 589 Crs
6910 585 Crs
6912 587 Crs
6914 584 Crs
6916 583 Crs
6918 581 Crs
6920 581 Crs
6922 580 Crs
6924 582 Crs
6926 579 Crs
6928 574 Crs
6929 572 Crs
6931 577 Crs
6933 576 Crs
6935 574 Crs
6937 572 Crs
6939 570 Crs
6941 569 Crs
6942 569 Crs
6944 565 Crs
6946 569 Crs
1809 581 Crs
% End plot #2
1.000 UL
LTb
602 4619 N
602 448 L
6345 0 V
0 4171 V
-6345 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
